<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="mapper">

    <select id="searchThesisUnverified" resultType="com.woxue.mt.sqldealer.Thesis">
        select 论文名字 as title, 作者 as author, 被引次数 as referenceCount, 发表时间 as publishTime, 关键词 as keyword, 摘要 as summary, 论文DOI as id, 链接 as url, 审核状态 as verifyState
        from 论文表
        where 审核状态 = 0
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchThesis" resultType="com.woxue.mt.sqldealer.Thesis">
        select id, title, author, keyword, url, summary, publishTime, verifyState, referenceCount, professorId, score
        from
        (
            select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score
            from 本站论文 as a
            where
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(concat_ws(' ', 标题, 作者, 关键字)) regexp lower(#{item})
            </foreach>
        union(
            select 论文DOI as id, 论文名字 as title, 作者 as author, 关键词 as keyword, 链接 as url, 摘要 as summary, 发表时间 as publishTime, 审核状态 as verifyState, 被引次数 as referenceCount, null professorId, null score
            from 论文表 as b
            where
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(concat_ws(' ', 论文名字, 作者, 关键词)) regexp lower(#{item})
            </foreach>
            and 发表时间 &gt;= #{yearStart} and 发表时间 &lt; #{yearEnd}
            order by
            <if test='order == "REFERENCE_COUNT"'> cast(被引次数 as signed integer) desc, </if>
            <if test='order == "RECENT"'> 发表时间 desc, </if>
            论文DOI asc
        ) as c
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchThesisById" resultType="com.woxue.mt.sqldealer.Thesis">
        select id, title, author, keyword, url, summary, publishTime, verifyState, referenceCount, professorId, score, clickCount
        from
        (
            select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score, 点击次数 as clickCount
            from 本站论文 as a
            where ID = #{id}
        union
            select 论文DOI as id, 论文名字 as title, 作者 as author, 关键词 as keyword, 链接 as url, 摘要 as summary, 发表时间 as publishTime, 审核状态 as verifyState, 被引次数 as referenceCount, null professorId, null score, 点击次数 as clickCount
            from 论文表 as b
            where 论文DOI = #{id}
        ) as c
        limit 1
    </select>

    <select id="advancedSearchThesis" parameterType="hashMap" resultType="com.woxue.mt.sqldealer.Thesis">
        select id, title, author, keyword, url, summary, publishTime, verifyState, referenceCount, professorId, score
        from
        (
            select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score
            from 本站论文 as a
            where
            <foreach collection="titles" index="index" item="item" open="" separator="and" close="">
                lower(标题) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="authors" index="index" item="item" open="" separator="and" close="">
                lower(作者) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(关键字) regexp lower(#{item})
            </foreach>
        union(
            select 论文DOI as id, 论文名字 as title, 作者 as author, 关键词 as keyword, 链接 as url, 摘要 as summary, 发表时间 as publishTime, 审核状态 as verifyState, 被引次数 as referenceCount, null professorId, null score
            from 论文表 as b
            where
            <foreach collection="titles" index="index" item="item" open="" separator="and" close="">
                lower(论文名字) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="authors" index="index" item="item" open="" separator="and" close="">
                lower(作者) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(关键词) regexp lower(#{item})
            </foreach>
            and 发表时间 &gt;= #{yearStart} and 发表时间 &lt; #{yearEnd}
            order by
            <if test='order == "REFERENCE_COUNT"'> cast(被引次数 as signed integer) desc, </if>
            <if test='order == "RECENT"'> 发表时间 desc, </if>
            论文DOI asc
        ) as c
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchThesisRecommandedByReferenceCount" resultType="com.woxue.mt.sqldealer.Thesis">
        select id, title, author, keyword, url, summary, publishTime, verifyState, referenceCount, professorId, score
        from
        (
            select 论文DOI as id, 论文名字 as title, 作者 as author, 关键词 as keyword, 链接 as url, 摘要 as summary, 发表时间 as publishTime, 审核状态 as verifyState, 被引次数 as referenceCount, null professorId, null score
            from 论文表 as a
            where 发表时间 in ("2019","2018")
            order by cast(被引次数 as signed integer) desc, 论文DOI asc
            limit #{limit}
        ) as b
        order by rand()
        limit #{number}
    </select>

    <select id="searchThesisByProfessorId" resultType="com.woxue.mt.sqldealer.ProfessorOwnThesis">
        select id, title, author, keyword, url, summary, publishTime, verifyState, referenceCount, professorId, score
        from
        (
            select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score
            from 本站论文 as a
            where 专家ID = #{professorId}
        union
            select 论文DOI as id, 论文名字 as title, 作者 as author, 关键词 as keyword, 链接 as url, 摘要 as summary, 发表时间 as publishTime, 审核状态 as verifyState, 被引次数 as referenceCount, null professorId, null score
            from 论文表 as b
            where 论文DOI in
            (
                select 论文DOI
                from 专家拥有论文 as c
                where 专家ID = #{professorId}
            )
        ) as d
        limit #{limit1}, #{limit2}
    </select>

    <update id="updateThesis">
        update 本站论文
        <set>
            <if test="id != null"> ID = #{id}, </if>
            <if test="professorId != null"> 专家ID = #{professorId}, </if>
            <if test="title != null"> 标题 = #{title}, </if>
            <if test="author != null"> 作者 = #{author}, </if>
            <if test="keyword != null"> 关键字 = #{keyword}, </if>
            <if test="url != null"> 链接 = #{url}, </if>
            <if test="score != null"> 积分 = #{score}, </if>
        </set>
        where ID = #{id}
    </update>

    <insert id="insertThesis">
        insert into 本站论文(专家ID, 标题, 作者, 关键字, 简介, 链接, 积分)
        values(#{professorId}, #{title}, #{author}, #{keyword}, #{summary}, #{url}, #{score})
    </insert>

    <delete id="deleteThesisById">
        delete from 本站论文
        where ID = #{id}
    </delete>

    <select id="searchProfessor" resultType="com.woxue.mt.sqldealer.Professor">
        select id, name, organization, area, referenceCount, workNumber, verifyState, birthday, summary, title
        from
        (
            select ID as id, 姓名 as name, 机构 as organization, null area, null referenceCount, null workNumber, null verifyState, 出生日期 as birthday, 简介 as summary, 职称 as title
            from 科技专家 as a
            where
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(concat_ws(' ', 姓名, 机构)) regexp lower(#{item})
            </foreach>
        union
            select scholar_id as id, name as name, org as organization, area as area, ach_num as referenceCount, work_num as workNumber, 审核状态 as verifyState, null birthday, null summary, null title
            from xuezhebiao as b
            where
            <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
                lower(concat_ws(' ', name, org, area)) regexp lower(#{item})
            </foreach>
        ) as c
        limit #{limit1}, #{limit2}
    </select>

    <select id="advancedSearchProfessor" resultType="com.woxue.mt.sqldealer.Professor">
        select id, name, organization, area, referenceCount, workNumber, verifyState, birthday, summary, title
        from
        (
            select ID as id, 姓名 as name, 机构 as organization, null area, null referenceCount, null workNumber, null verifyState, 出生日期 as birthday, 简介 as summary, 职称 as title
            from 科技专家 as a
            where
            <foreach collection="names" index="index" item="item" open="" separator="and" close="">
                lower(姓名) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="organizations" index="index" item="item" open="" separator="and" close="">
                lower(机构) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="areas" index="index" item="item" open="" separator="and" close="">
                lower(简介) regexp lower(#{item})
            </foreach>
        union
            select scholar_id as id, name as name, org as organization, area as area, ach_num as referenceCount, work_num as workNumber, 审核状态 as verifyState, null birthday, null summary, null title
            from xuezhebiao as b
            where
            <foreach collection="names" index="index" item="item" open="" separator="and" close="">
                lower(name) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="organizations" index="index" item="item" open="" separator="and" close="">
                lower(org) regexp lower(#{item})
            </foreach>
            and
            <foreach collection="areas" index="index" item="item" open="" separator="and" close="">
                lower(area) regexp lower(#{item})
            </foreach>
        ) as c
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchProfessorById" resultType="com.woxue.mt.sqldealer.Professor">
        select id, name, organization, area, referenceCount, workNumber, verifyState, birthday, summary, title
        from
        (
            select ID as id, 姓名 as name, 机构 as organization, null area, null referenceCount, null workNumber, null verifyState, 出生日期 as birthday, 简介 as summary, 职称 as title
            from 科技专家 as a
            where ID = #{id}
        union
            select scholar_id as id, name as name, org as organization, area as area, ach_num as referenceCount, work_num as workNumber, 审核状态 as verifyState, null birthday, null summary, null title
            from xuezhebiao as b
            where scholar_id = #{id}
        ) as c
    </select>

    <select id="searchProfessorByNameAndOrganization" resultType="com.woxue.mt.sqldealer.Professor">
        select id, name, organization, area, referenceCount, workNumber, verifyState, birthday, summary, title
        from
        (
            select ID as id, 姓名 as name, 机构 as organization, null area, null referenceCount, null workNumber, null verifyState, 出生日期 as birthday, 简介 as summary, 职称 as title
            from 科技专家 as a
            where 姓名 regexp #{name} and 机构 regexp ${organization}
        union
            select scholar_id as id, name as name, org as organization, area as area, ach_num as referenceCount, work_num as workNumber, 审核状态 as verifyState, null birthday, null summary, null title
            from xuezhebiao as b
            where name regexp #{name} and org regexp ${organization}
        ) as c
    </select>

    <select id="searchProfessorUnverified" resultType="com.woxue.mt.sqldealer.Professor">
        select name as name, org as organization, scholar_id as id, ach_num as referenceCount, work_num as workNumber, area as area, 审核状态 as verifyState
        from xuezhebiao
        where 审核状态 = 0
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchProfessorByArea" resultType="com.woxue.mt.sqldealer.Professor">
        select name as name, org as organization, scholar_id as id, ach_num as referenceCount, work_num as workNumber, area as area, 审核状态 as verifyState
        from xuezhebiao
        where regexp #{area}
        limit #{limit1}, #{limit2}
    </select>

    <update id="updateProfessor">
        update 科技专家
        <set>
            <if test="name != null"> 姓名 = #{name}, </if>
            <if test="organization != null"> 机构 = #{organization}, </if>
            <if test="birthday != null"> 出生日期 = #{birthday}, </if>
            <if test="summary != null"> 简介 = #{summary}, </if>
            <if test="title != null"> 职称 = #{title}, </if>
        </set>
        where ID = #{id}
    </update>

    <delete id="deleteProfessorById">
        delete from 科技专家
        where ID = #{id}
    </delete>

    <select id="searchUser" resultType="com.woxue.mt.sqldealer.User">
        select ID as id, 关注领域 as focusArea, 积分值 as score, 密码 as password, 昵称 as nickname, 手机号 as phoneNumber, 邮箱 as email
        from 用户
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchUserById" resultType="com.woxue.mt.sqldealer.User">
        select ID as id, 关注领域 as focusArea, 积分值 as score, 密码 as password, 昵称 as nickname, 手机号 as phoneNumber, 邮箱 as email
        from 用户
        where ID = #{id}
        limit 1
    </select>

    <update id="updateUser">
        update 用户
        <set>
            <if test="focusArea != null"> 关注领域 = #{focusArea}, </if>
            <if test="nickname != null"> 昵称 = #{nickname}, </if>
            <if test="password != null"> 密码 = #{password}, </if>
            <if test="phoneNumber != null"> 手机号 = #{phoneNumber}, </if>
            <if test="email != null"> 邮箱 = #{email}, </if>
            <if test="score != null"> 积分值 = #{score}, </if>
        </set>
        where ID = #{id}
    </update>

    <insert id="insertUser">
        insert into 用户(ID, 关注领域, 积分值, 密码, 昵称, 手机号, 邮箱)
        values(#{id}, #{focusArea}, #{score}, #{password}, #{nickname}, #{phoneNumber}, #{email})
    </insert>

    <delete id="deleteUserById">
        delete from 用户
        where ID = #{id}
    </delete>

    <select id="searchTrendByProfessorId" resultType="com.woxue.mt.sqldealer.Trend">
        select ID as id, 专家ID as professorId, 内容 as content, 时间 as publishTime, 专家名 as profName
        from 动态
        where 专家ID = #{id}
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchTrendByUserId" resultType="com.woxue.mt.sqldealer.Trend">
        select ID as id, 专家ID as professorId, 内容 as content, 时间 as publishTime, 专家名 as profName
        from 动态
        where 专家ID in (
          select ID2 as 专家ID from 关注 where ID1 = #{id}
        ) or 专家ID = #{id}
        order by publishTime desc
    </select>

    <select id="searchTrendByUserId2" resultType="com.woxue.mt.sqldealer.Trend">
        select ID as id, 专家ID as professorId, 内容 as content, 时间 as publishTime, 专家名 as profName
        from 动态
        where 专家ID = #{id}
        order by publishTime desc
    </select>

    <insert id="insertTrend">
        insert into 动态(专家ID, 内容, 时间, 专家名)
        values(#{professorId}, #{content}, #{publishTime},#{profName})
    </insert>

    <delete id="deleteTrendById">
        delete from 动态
        where ID = #{id}
    </delete>

    <update id="updateTrendById">
        update 动态
            set 内容 = #{content}
        where ID = #{id}
    </update>

    <select id="searchCommentByThesisId" resultType="com.woxue.mt.sqldealer.Comment">
        select ID as id, 发起者ID as userId, 论文ID as thesisId, 内容 as content, 评分 as score, 发表时间 as publishTime
        from 评论
        where 论文ID = #{thesisId}
    </select>

    <insert id="insertComment">
        insert into 评论(发起者ID, 论文ID, 内容, 评分, 发表时间)
        values(#{userId}, #{thesisId}, #{content}, #{score}, #{publishTime})
    </insert>

    <select id="searchRelationshipByProfessorId" resultType="com.woxue.mt.sqldealer.Relationship">
        select 主专家ID as masterProfessorId, 主专家名字 as masterProfessorName, 从专家名字 as slaveProfessorName, 从专家链接 as slaveProfessorUrl
        from 关系网络
        where 主专家ID = #{professorId}
        limit 1
    </select>

    <select id="searchProfessorOwnThesisByProfessorId" resultType="com.woxue.mt.sqldealer.ProfessorOwnThesis">
        select 专家ID as professorId, 论文DOI as thesisId, 专家名字 as professorName
        from 专家拥有论文
        where 专家ID = #{professorId}
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchProfessorOwnThesisCountByProfessorId" resultType="int">
        select count(*)
        from 专家拥有论文
        where 专家ID = #{professorId}
    </select>

    <select id="searchPatent" resultType="com.woxue.mt.sqldealer.Patent">
        select 专利名字 as name, 申请号 as id, 申请日 as date, 申请人 as applicant, 地址 as address, 发明人 as inventor, 专利代理机构 as agency, 代理人 as agent, 国省代码 as provinceCode, 摘要 as summary, 主权项 as independentClaim, 主分类号 as mainClass, 专利分类号 as patentClass
        from 专利表
        where
        <foreach collection="keywords" index="index" item="item" open="" separator="and" close="">
            lower(专利名字) regexp lower(#{item})
        </foreach>
        limit #{limit1}, #{limit2}
    </select>

    <select id="advancedSearchPatent" resultType="com.woxue.mt.sqldealer.Patent">
        select 专利名字 as name, 申请号 as id, 申请日 as date, 申请人 as applicant, 地址 as address, 发明人 as inventor, 专利代理机构 as agency, 代理人 as agent, 国省代码 as provinceCode, 摘要 as summary, 主权项 as independentClaim, 主分类号 as mainClass, 专利分类号 as patentClass
        from 专利表
        where
        <foreach collection="names" index="index" item="item" open="" separator="and" close="">
            lower(专利名字) regexp lower(#{item})
        </foreach>
        and
        <foreach collection="applicants" index="index" item="item" open="" separator="and" close="">
            lower(申请人) regexp lower(#{item})
        </foreach>
        and
        <foreach collection="inventors" index="index" item="item" open="" separator="and" close="">
            lower(发明人) regexp lower(#{item})
        </foreach>
        and
        <foreach collection="ids" index="index" item="item" open="" separator="and" close="">
            lower(申请号) regexp lower(#{item})
        </foreach>
        and 申请日 &gt;= #{dateStart} and 申请日 &lt; #{dateEnd}
        limit #{limit1}, #{limit2}
    </select>

    <select id="searchPatentById" resultType="com.woxue.mt.sqldealer.Patent">
        select 专利名字 as name, 申请号 as id, 申请日 as date, 申请人 as applicant, 地址 as address, 发明人 as inventor, 专利代理机构 as agency, 代理人 as agent, 国省代码 as provinceCode, 摘要 as summary, 主权项 as independentClaim, 主分类号 as mainClass, 专利分类号 as patentClass
        from 专利表
        where 申请号 = #{id}
    </select>

    <select id="selectUserBuyThesisByUserId" resultType="com.woxue.mt.sqldealer.UserBuyThesis">
        select 用户ID as userId, 论文ID as thesisId
        from 购买
        where 用户ID = #{userId}
        limit #{limit1}, #{limit2}
    </select>

    <insert id="insertUserBuyThesis">
        insert into 购买(用户ID, 论文ID)
        values(#{userId}, #{thesisId})
    </insert>

    <update id="updateThesisClick1">
        update 本站论文
            set 点击次数 = #{clickCount}
        where ID = #{id}
    </update>

    <update id="updateThesisClick2">
        update 论文表
            set 点击次数 = #{clickCount}
        where 论文DOI = #{id}
    </update>

    <update id="updateThesisGrade1">
        update 本站论文
            set 平均分 = #{averageGrade}
        where ID = #{id}
    </update>

    <update id="updateThesisGrade2">
        update 论文表
            set 平均分 = #{averageGrade}
        where 论文DOI = #{id}
    </update>

    <select id="searchWatchById" resultType="com.woxue.mt.sqldealer.Watch">
        select ID1 as id1, ID2 as id2
        from 关注
        where ID1 = #{id1} and ID2 = #{id2}
        limit 1
    </select>

    <select id="searchWatchAllById" resultType="com.woxue.mt.sqldealer.Watch">
        select ID1 as id1, ID2 as id2
        from 关注
        where ID1 = #{id1}
    </select>

    <insert id="insertWatch">
        insert into 关注(ID1, ID2)
        values(#{id1}, #{id2})
    </insert>

    <delete id="deleteWatchById">
        delete from 关注
        where ID1 = #{id1} and ID2 = #{id2}
    </delete>

    <select id="searchLocalThesisById" resultType="com.woxue.mt.sqldealer.Thesis">
        select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score, 点击次数 as clickCount
            from 本站论文
            where 专家ID = #{id}
    </select>

    <select id="searchBoughtThesisById" resultType="com.woxue.mt.sqldealer.Thesis">
        select ID as id, 标题 as title, 作者 as author, 关键字 as keyword, 链接 as url, 简介 as summary, null publishTime, null verifyState, null referenceCount, 专家ID as professorId, 积分 as score, 点击次数 as clickCount
            from 本站论文
            where ID in (
                select 论文ID as ID from 购买 where 用户ID = #{id}
            )
    </select>

    <select id="searchProfessorRecommandedByReferenceCount" resultType="com.woxue.mt.sqldealer.Professor">
        select  name, organization, id, referenceCount, workNumber, area, verifyState
        from
        (
            select name as name, org as organization, scholar_id as id, ach_num as referenceCount, work_num as workNumber, area as area, 审核状态 as verifyState
            from xuezhebiao as a
            order by ach_num desc
            limit #{limit}
        ) as b
        order by rand()
        limit #{number}
    </select>
</mapper>